<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>进阶</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-12T05:54:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>karen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack探路</title>
    <link href="http://yoursite.com/2018/01/12/webpack%E6%8E%A2%E8%B7%AF/"/>
    <id>http://yoursite.com/2018/01/12/webpack探路/</id>
    <published>2018-01-12T05:54:08.000Z</published>
    <updated>2018-01-12T05:54:08.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在note上添加上vue-router</title>
    <link href="http://yoursite.com/2017/12/13/vue-router/"/>
    <id>http://yoursite.com/2017/12/13/vue-router/</id>
    <published>2017-12-13T07:18:24.000Z</published>
    <updated>2017-12-14T03:26:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>把note项目改造了一下，采用路由的方式<br>单页面应用</p><h3 id="记录一下"><a href="#记录一下" class="headerlink" title="记录一下"></a>记录一下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在src下新建文件夹router</span><br><span class="line"></span><br><span class="line">在main.js中</span><br><span class="line">import router from <span class="string">'./router'</span></span><br><span class="line">import Vue from <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(router)</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="之前的写法"><a href="#之前的写法" class="headerlink" title="之前的写法"></a>之前的写法</h3><pre><code>import router from &apos;./router&apos;import Vue from &apos;vue&apos;Vue.use(router)new Vue({    store, //vuex    el: &apos;#app&apos;,    router,    template: &apos;&lt;App/&gt;&apos;,    components: { App } //import App from &apos;./App&apos;})</code></pre><h3 id="现在的写法"><a href="#现在的写法" class="headerlink" title="现在的写法"></a>现在的写法</h3><pre><code>new Vue({    store, //vuex    el: &apos;#app&apos;,    router,    ...App})</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.vue</span><br><span class="line"></span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure><h3 id="路由文件-router-index-js"><a href="#路由文件-router-index-js" class="headerlink" title="路由文件 router/index.js"></a>路由文件 router/index.js</h3><pre><code>import Router from &apos;vue-router&apos;import Index from &apos;@/views/Index&apos;Vue.use(Router)export default new Router({    routes: [    {        path: &apos;/index&apos;,        name: &apos;index&apos;,        component: Index    },{    }]})</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置完router后，发现url为 http://localhost:8080/<span class="comment">#/</span></span><br><span class="line">在此就要了解一下 vue-router 是默认<span class="built_in">hash</span>模式的，</span><br><span class="line">也就是说当url改变时，页面不会重新加载，相当于锚点跳转</span><br><span class="line">如果不想要这种<span class="built_in">hash</span>模式，可以采用history.pushState API完成跳转</span><br></pre></td></tr></table></figure><h3 id="vue2-0-路由选择-Modes"><a href="#vue2-0-路由选择-Modes" class="headerlink" title="vue2.0 路由选择 Modes"></a>vue2.0 路由选择 Modes</h3><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">new Router(&#123;</span><br><span class="line"><span class="built_in">history</span>: <span class="literal">true</span>,</span><br><span class="line">routes:[]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></code></pre><h3 id="但需要注意的是，这种情况需要后端的支持，比如locahost-8080-login-id这种就会找不到"><a href="#但需要注意的是，这种情况需要后端的支持，比如locahost-8080-login-id这种就会找不到" class="headerlink" title="但需要注意的是，这种情况需要后端的支持，比如locahost:8080/login/:id这种就会找不到"></a>但需要注意的是，这种情况需要后端的支持，比如locahost:8080/login/:id这种就会找不到</h3><pre><code>暂时处理方法可以是 定义一个routes * 当所有找不到的path时 都指向404.vue</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;把note项目改造了一下，采用路由的方式&lt;br&gt;单页面应用&lt;/p&gt;
&lt;h3 id=&quot;记录一下&quot;&gt;&lt;a href=&quot;#记录一下&quot; class=&quot;headerlink&quot; title=&quot;记录一下&quot;&gt;&lt;/a&gt;记录一下&lt;/h3&gt;&lt;figure class=&quot;highlight bas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>运用vuex构建note</title>
    <link href="http://yoursite.com/2017/11/28/vuex/"/>
    <id>http://yoursite.com/2017/11/28/vuex/</id>
    <published>2017-11-28T10:12:34.000Z</published>
    <updated>2017-12-13T07:19:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>vuex探究</p><p>最近研究了下vue+vuex,正好看到了国外的一篇文章(如何构建一个笔记的单页应用),就着练手了下,也从中发现了一些问题并解决了。<br>–国外文章地址：<a href="https://coligo.io/learn-vuex-by-building-notes-app/" target="_blank" rel="external">https://coligo.io/learn-vuex-by-building-notes-app/</a><br>在此记录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">具体安装操作什么的就不一一详细说明了。</span><br></pre></td></tr></table></figure><h3 id="那篇文章的vue版本应该是1-0，而本地项目安装的版本为2-0，所以练习的过程中碰到了一些问题。"><a href="#那篇文章的vue版本应该是1-0，而本地项目安装的版本为2-0，所以练习的过程中碰到了一些问题。" class="headerlink" title="那篇文章的vue版本应该是1.0，而本地项目安装的版本为2.0，所以练习的过程中碰到了一些问题。"></a>那篇文章的vue版本应该是1.0，而本地项目安装的版本为2.0，所以练习的过程中碰到了一些问题。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2.0使用了mapActions,mapGetters</span><br><span class="line">dispatch =&gt; commit</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import &#123; addNote, deleteNote, toggleFavorite &#125; from <span class="string">'../vuex/actions'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  vuex: &#123;</span><br><span class="line">    getters: &#123;</span><br><span class="line">      activeNote: state =&gt; state.activeNote</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">      addNote,</span><br><span class="line">      deleteNote,</span><br><span class="line">      toggleFavorite</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要改成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import &#123; mapActions, mapGetters &#125; from <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">...mapActions([<span class="string">'editNote'</span>, <span class="string">'editContent'</span>])</span><br><span class="line">&#125;,</span><br><span class="line">computed: &#123;</span><br><span class="line">...mapGetters([<span class="string">'activeNoteText'</span>, <span class="string">'activeNoteContent'</span>])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>actions.js的引入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import * as actions from <span class="string">'./actions'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default new Vuex.Store(&#123; actions&#125;)</span><br><span class="line"></span><br><span class="line">就不需要</span><br><span class="line">import &#123; addNote, deleteNote, toggleFavorite &#125; from <span class="string">'../vuex/actions'</span></span><br><span class="line"></span><br><span class="line">在main.js注入store</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">还有个数据绑定的小问题</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> @input=<span class="string">"editNote"</span> v-model=<span class="string">"activeNoteText"</span>&gt;</span><br><span class="line">这时候会报一个错：Computed property <span class="string">"activeNoteText"</span> was assigned to but it has no setter.</span><br></pre></td></tr></table></figure><p>stackoverflow上有段解释 (<a href="https://stackoverflow.com/questions/46106037/vuex-computed-property-name-was-assigned-to-but-it-has-no-setter" target="_blank" rel="external">https://stackoverflow.com/questions/46106037/vuex-computed-property-name-was-assigned-to-but-it-has-no-setter</a>)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">If you<span class="string">'re going to v-model a computed, it needs a setter. Whatever you want it to do with the updated value (probably write it to the $store, considering that'</span>s what your getter pulls it from) you <span class="keyword">do</span> <span class="keyword">in</span> the setter.</span><br><span class="line"></span><br><span class="line">If writing it back to the store happens via form submission, you don<span class="string">'t want to v-model, you just want to set :value.</span></span><br></pre></td></tr></table></figure></p><p>具体代码在 <a href="https://github.com/karencxx/vue.git" target="_blank" rel="external">https://github.com/karencxx/vue.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vuex探究&lt;/p&gt;
&lt;p&gt;最近研究了下vue+vuex,正好看到了国外的一篇文章(如何构建一个笔记的单页应用),就着练手了下,也从中发现了一些问题并解决了。&lt;br&gt;–国外文章地址：&lt;a href=&quot;https://coligo.io/learn-vuex-by-build
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vue项目构建</title>
    <link href="http://yoursite.com/2017/11/27/vue%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/"/>
    <id>http://yoursite.com/2017/11/27/vue项目构建/</id>
    <published>2017-11-27T06:15:37.000Z</published>
    <updated>2017-12-21T09:37:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>###记录一下</p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前提: node和npm环境</span><br></pre></td></tr></table></figure><p>安装vue-cli脚手架<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init webpack [project name]</span><br><span class="line">初始化项目，整个项目是基于webpack，项目信息具体步骤如下图</span><br></pre></td></tr></table></figure></p><p><img src="/img/vue-init.png" alt="vue init project"></p><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack [project name]</span><br></pre></td></tr></table></figure></p><p>安装项目依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进入项目所在文件夹，执行npm install</span><br></pre></td></tr></table></figure></p><p>运行项目<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm run dev 热部署项目</span><br><span class="line"></span><br><span class="line">其中的“run”对应的是package.json文件中，scripts字段中的dev，也就是 node build/dev-server.js命令的一个快捷方式。</span><br></pre></td></tr></table></figure></p><p>项目文件结构<br><img src="/img/vue-structure.png" alt="vue project structure"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###记录一下&lt;/p&gt;
&lt;hr&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>1123-2</title>
    <link href="http://yoursite.com/2017/11/23/1123-2/"/>
    <id>http://yoursite.com/2017/11/23/1123-2/</id>
    <published>2017-11-23T03:21:38.000Z</published>
    <updated>2017-11-23T07:49:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>Express 路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">路由,Routing是由一个URI和一个特定的HTTP方法组成的，涉及到应用如何相应客户端对某个网站节点的访问。</span><br></pre></td></tr></table></figure><p>结构组成:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.METHOD(PATH, HANDLER)</span><br><span class="line">app是一个express实例；METHOD是某个HTTP请求方式中的一个；PATH是服务器端的路径;HANDLER是当路由匹配到时需要执行的函数</span><br></pre></td></tr></table></figure></p><p>Express 托管静态文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过内置的express.static可以方便地托管静态文件，例如图片，css，JavaScript文件等</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将静态资源文件所在的目录座位参数传递给express.static中间件就可以提供静态资源文件的访问了。</span><br><span class="line">例如：在public目录放置了静态资源，设置app.use(express.static(<span class="string">'public'</span>))，就可以通过localhost:3000/images/xxx.png访问了</span><br><span class="line"></span><br><span class="line">还可以指定一个挂载前缀，app.use(<span class="string">'/static'</span>, express.static(<span class="string">'public'</span>)),访问路径为localhost:3000/static/images/xxx.png</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* 文件路径是相对路径，即存放静态文件的目录名不会出现在url中</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在express中404并不是一个error,因此错误处理器中间件捕获不到404，需要单独拎出来处理</span><br><span class="line">(404相对来说只是功能未完全实现)</span><br><span class="line">app.use(<span class="keyword">function</span>(req, res, next)&#123;</span><br><span class="line">res.status(404).send(<span class="string">'404 not find'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置错误处理器,多一个err参数</span><br><span class="line">app.use(<span class="keyword">function</span>(err, req, res, next)&#123;</span><br><span class="line">res.status(500).send(<span class="string">'error'</span>+ err.stack)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">字符串模式的路由路径</span><br><span class="line">?、+、*、()是正则表达式的子集</span><br><span class="line"></span><br><span class="line">/ab?<span class="built_in">cd</span> -- 匹配abcd、acd</span><br><span class="line">/ab+<span class="built_in">cd</span> -- 匹配abcd、abbcd、abbbcd等</span><br><span class="line">/ab*<span class="built_in">cd</span> -- 匹配abcd、abxcd、abjfkjfcd等</span><br><span class="line">/ab(<span class="built_in">cd</span>)?e -- 匹配abe、abcde</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.route() 创建路由路径的链式路由句柄。</span><br><span class="line"></span><br><span class="line">app.route(<span class="string">'/test'</span>)</span><br><span class="line">.get(<span class="keyword">function</span>(req, res)&#123;</span><br><span class="line">res.send(<span class="string">'test a'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">.post(<span class="keyword">function</span>(req, res)&#123;</span><br><span class="line">res.send(<span class="string">'test b'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可用express.Router类创建模块化、可挂载的路由句柄。</span><br></pre></td></tr></table></figure><p>参考<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.expressjs.com.cn/starter/installing.html</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Express 路由&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>1123</title>
    <link href="http://yoursite.com/2017/11/23/1123/"/>
    <id>http://yoursite.com/2017/11/23/1123/</id>
    <published>2017-11-23T02:57:57.000Z</published>
    <updated>2017-11-23T03:12:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Express安装记录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前提 -- node环境</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir myapp -- 创建工作目录</span><br><span class="line">cd myapp -- 进入</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -- 初始化package.json，依次enter键就好了，但注意entry point所指向的文件(在此命名为app.js)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save --安装express</span><br><span class="line">npm install express -- 临时安装</span><br></pre></td></tr></table></figure><p>入门第一步 – hello world<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd myapp -- 进入myapp目录，创建app.js</span><br></pre></td></tr></table></figure></p><p>输入代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&apos;express&apos;)</span><br><span class="line">var app = express()</span><br><span class="line"></span><br><span class="line">app.get(&apos;/&apos;, function(req, res)&#123;</span><br><span class="line">res.send(&apos;Hello World&apos;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">var server = app.listen(3000, function()&#123;</span><br><span class="line">var host = server.address().address</span><br><span class="line">var host = server.address().port</span><br><span class="line">console.log(&apos;Example app listening at http://%s:%s&apos;, host, port)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 代码解释: 启动一个服务并监听从3000端口进入的所有连接服务。他将对所有(/)URL或路由返回&apos;Hello World&apos;的字符串</span><br><span class="line">对其他路径返回404</span><br></pre></td></tr></table></figure><p>启动应用</p><pre><code class="base">node app.js</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Express安装记录&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>1121</title>
    <link href="http://yoursite.com/2017/11/21/1121/"/>
    <id>http://yoursite.com/2017/11/21/1121/</id>
    <published>2017-11-21T09:26:02.000Z</published>
    <updated>2017-11-21T09:44:20.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">得过且过</span><br><span class="line">感觉有点漫无目的</span><br><span class="line">给自己定的小目标也没有落实</span><br><span class="line">毫无头绪，不知道从何开头</span><br><span class="line">胡思乱想 乱七八糟的</span><br><span class="line">看来得好好规划了</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>create a plugin</title>
    <link href="http://yoursite.com/2017/11/17/create-a-plugin/"/>
    <id>http://yoursite.com/2017/11/17/create-a-plugin/</id>
    <published>2017-11-17T06:39:10.000Z</published>
    <updated>2017-11-17T08:46:48.000Z</updated>
    
    <content type="html"><![CDATA[<iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/AntBody/138zf8kk/embedded/js,html,css,result/dark" frameborder="0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe scrolling=&quot;no&quot; width=&quot;100%&quot; height=&quot;300&quot; src=&quot;//jsfiddle.net/AntBody/138zf8kk/embedded/js,html,css,result/dark&quot; frameborder=&quot;0&quot; allo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>1116</title>
    <link href="http://yoursite.com/2017/11/16/1116/"/>
    <id>http://yoursite.com/2017/11/16/1116/</id>
    <published>2017-11-16T03:13:03.000Z</published>
    <updated>2017-11-22T03:15:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>了解<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dubbo 分布式服务框架 远程服务调用</span><br><span class="line">Zookeeper 选举机制 paxos算法</span><br></pre></td></tr></table></figure></p><p>最近小目标<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.JS、ES6、css3</span><br><span class="line">2.插件编写</span><br><span class="line">3.css sprite雪碧图</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;了解&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建步骤</title>
    <link href="http://yoursite.com/2017/11/15/my-first-article/"/>
    <id>http://yoursite.com/2017/11/15/my-first-article/</id>
    <published>2017-11-15T06:23:45.000Z</published>
    <updated>2017-11-16T03:06:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下:)</p><ol><li>前提：本地 node git 环境</li><li>安装hexo – 打开终端，输入 sudo npm install -g hexo </li><li>初始化hexo – 本地目录下创建名为hexo的文件夹，终端定位到该目录下，执行命令：nexo init</li><li>安装依赖 – npm install</li><li>生成静态页面 – hexo generate</li><li>开启服务 – hexo server 本地监听 localhost:4000</li><li>远程创建repository – your_user_name.github.io (与github用户名一致)</li><li>安装git部署器 – npm install hexo-deployer-git –save</li><li>修改配置文件 – 打开_config.yml 在文件末尾修改<pre><code>deploytype: git repo: 你的repository地址       如 https://github.com/xxx/xxx.github.io.gitbranch: master</code></pre></li><li>部署 – hexo deploy</li><li>效果 – 打开网站 <a href="https://xxx.github.io" target="_blank" rel="external">https://xxx.github.io</a></li><li>发表文章 – hexo new ‘文章名’</li><li>编辑完，重新生成并部署 – hexo clean hexo g hexo d</li><li>hexo在hexo目录下执行<br>hexo命令缩写     <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g(generate) </span><br><span class="line">hexo d(deploy) </span><br><span class="line">hexo s(server) </span><br><span class="line">hexo n(new)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下:)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前提：本地 node git 环境&lt;/li&gt;
&lt;li&gt;安装hexo – 打开终端，输入 sudo npm install -g hexo &lt;/li&gt;
&lt;li&gt;初始化hexo – 本地目录下创建名为hexo的文件夹，终端定位到该目录下，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/11/15/hello-world/"/>
    <id>http://yoursite.com/2017/11/15/hello-world/</id>
    <published>2017-11-15T03:44:22.000Z</published>
    <updated>2017-11-15T03:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
